syntax = "proto3";
package video_call;

//errors response
message ErrorRes {
    int64 code = 1;
    string message = 2;
}

message BaseResponse {
    bool success = 1;
    ErrorRes errors = 2;
}

message ServerResponse {
    string group_rtc_url = 1;
    int64 group_rtc_id = 2;
    string group_rtc_token = 3;
    StunServer stun_server = 4;
    TurnServer turn_server = 5;
}

message StunServer {
  string server = 1;
  int64 port = 2;
}

message TurnServer {
  string server = 1;
  int64 port = 2;
  string type = 3;
  string user = 4;
  string pwd = 5;
}

// Request: new call
message VideoCallRequest {
  string client_id = 1;
  int64 group_id = 2;
  string call_type = 3; //audio or video */
}
//response: BaseResponse

message WorkspaceVideoCallRequest {
  string from_client_id = 1;
  string from_client_name = 2;
  string from_client_avatar = 3;
  string from_client_workspace_domain = 4;
  string client_id = 5;
  int64 group_id = 6;
  string call_type = 7;
}

// Request: call update
message UpdateCallRequest {
  string client_id = 1;
  int64 group_id = 2;
  string update_type = 3;
}
//response: BaseResponse

message WorkspaceUpdateCallRequest {
  string from_client_id = 1;
  string from_client_name = 2;
  string from_client_avatar = 3;
  string from_client_workspace_domain = 4;
  string client_id = 5;
  int64 group_id = 6;
  string update_type = 7;
}


service VideoCall {
    rpc video_call(VideoCallRequest) returns (ServerResponse) {};
    rpc update_call(UpdateCallRequest) returns (BaseResponse) {};
    //
    rpc workspace_video_call (WorkspaceVideoCallRequest) returns (ServerResponse);
    rpc workspace_update_call(WorkspaceUpdateCallRequest) returns (BaseResponse) {};
}
