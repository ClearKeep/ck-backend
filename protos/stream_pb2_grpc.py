# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos import stream_pb2 as protos_dot_stream__pb2


class GreeterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UnaryUnaryGreeting = channel.unary_unary(
                '/stream.Greeter/UnaryUnaryGreeting',
                request_serializer=protos_dot_stream__pb2.StreamRequest.SerializeToString,
                response_deserializer=protos_dot_stream__pb2.StreamReply.FromString,
                )
        self.UnaryStreamGreeting = channel.unary_stream(
                '/stream.Greeter/UnaryStreamGreeting',
                request_serializer=protos_dot_stream__pb2.StreamRequest.SerializeToString,
                response_deserializer=protos_dot_stream__pb2.StreamReply.FromString,
                )


class GreeterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UnaryUnaryGreeting(self, request, context):
        """A simple RPC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnaryStreamGreeting(self, request, context):
        """A response streaming RPC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UnaryUnaryGreeting': grpc.unary_unary_rpc_method_handler(
                    servicer.UnaryUnaryGreeting,
                    request_deserializer=protos_dot_stream__pb2.StreamRequest.FromString,
                    response_serializer=protos_dot_stream__pb2.StreamReply.SerializeToString,
            ),
            'UnaryStreamGreeting': grpc.unary_stream_rpc_method_handler(
                    servicer.UnaryStreamGreeting,
                    request_deserializer=protos_dot_stream__pb2.StreamRequest.FromString,
                    response_serializer=protos_dot_stream__pb2.StreamReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stream.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UnaryUnaryGreeting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stream.Greeter/UnaryUnaryGreeting',
            protos_dot_stream__pb2.StreamRequest.SerializeToString,
            protos_dot_stream__pb2.StreamReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnaryStreamGreeting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/stream.Greeter/UnaryStreamGreeting',
            protos_dot_stream__pb2.StreamRequest.SerializeToString,
            protos_dot_stream__pb2.StreamReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
