syntax = "proto3";
package message;

message MessageObjectResponse {
  string id = 1;
  int64 group_id = 2;
  string group_type = 3;
  string from_client_id = 4;
  string from_client_workspace_domain = 5;
  string client_id = 6;
  string client_workspace_domain = 7;
  bytes message = 8;
  repeated ClientReadObject lst_client_read = 9;
  int64 created_at = 10;
  int64 updated_at = 11;
  bytes sender_message = 12;
}

message ClientReadObject {
  string id = 1;
  string display_name = 2;
  string avatar = 3;
}


message BaseResponse {
    string error = 1;
}
// Request: get list message group
message GetMessagesInGroupRequest {
  int64 group_id = 1;
  int32 off_set = 2; //0
  int64 last_message_at = 3; //8746529349
}

// Request: get list message group for workspace requesting
message WorkspaceGetMessagesInGroupRequest {
  int64 group_id = 1;
  int32 off_set = 2; //0
  int64 last_message_at = 3; //8746529349
  string client_id = 4; // only for workspace request
}

// Response: GetMessagesInGroupResponse
message GetMessagesInGroupResponse {
  repeated MessageObjectResponse lst_message = 1;
}


// ----- PUBLISH AND SUBCRIBE MESSAGE -----
// Request: publish a message
// need to add new message encrypted with own public key so it could be decrypted by own private key
message PublishRequest {
  string from_client_device_id = 1;
  string clientId = 2;
  int64 groupId = 3;
  bytes message = 4;
  bytes sender_message = 5;
}
//response: BaseResponse
// need to add new message encrypted with own public key -> could be decrypted by own private key
message WorkspacePublishRequest {
  string from_client_id = 1;
  string from_client_workspace_domain = 2;
  string client_id = 3;
  int64 group_id = 4;
  string group_type = 5;
  string message_id = 6;
  bytes message = 7;
  int64 created_at = 8;
  int64 updated_at = 9;
  bytes sender_message = 10;
  string from_client_device_id = 11;
}

// Request: subcribe
message SubscribeRequest {
  string device_id = 1;
}
//response: BaseResponse

// Request: un-subcribe
message UnSubscribeRequest {
  string device_id = 1;
}
//response: BaseResponse

// Request: listen
message ListenRequest {
  string device_id = 1;
}
//response: BaseResponse or MessageObjectResponse stream

// Request: read message
message ReadMessagesRequest {
  repeated string lst_message_id = 4;
}
// Response: groupObjectResponse

message EditMessageRequest {
  string fromClientId = 1;
  string clientId = 2;
  int64 groupId = 3;
  string groupType = 4;
  bytes message = 5;
  string id = 6;
}

// Method
service Message {
    rpc get_messages_in_group(GetMessagesInGroupRequest) returns (GetMessagesInGroupResponse) {};
    rpc workspace_get_messages_in_group(WorkspaceGetMessagesInGroupRequest) returns (GetMessagesInGroupResponse) {};
    //action
    rpc Subscribe (SubscribeRequest) returns (BaseResponse);
    rpc UnSubscribe (UnSubscribeRequest) returns (BaseResponse);
    rpc Listen (ListenRequest) returns (stream MessageObjectResponse);
    rpc Publish (PublishRequest) returns (MessageObjectResponse);
    rpc read_messages (ReadMessagesRequest) returns (BaseResponse);
    //
    //
    rpc workspace_publish (WorkspacePublishRequest) returns (MessageObjectResponse);
    //rpc edit_message (EditMessageRequest) returns (MessageObjectResponse);
}
