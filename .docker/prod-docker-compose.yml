# Docker Compose Keycloak Postgres ( Docker compose for Keycloak with Postgres Database).
# docker-compose -f prod-docker-compose.yml up -d
version: '3.1'


volumes:
  postgres_data:
      driver: local

services:
  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
            - 5432:5432
    restart: unless-stopped
    logging:
      options:
        max-size: 100m
    environment:
      POSTGRES_DB: prod-authen
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: clk328@2021

  prod_authen:
    image: jboss/keycloak
    restart: unless-stopped
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: prod-authen
      DB_USER: admin
      DB_PASSWORD: clk328@2021
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: clk328@2021
      JAVA_TOOL_OPTIONS: -Dkeycloak.profile.feature.admin_fine_grained_authz=enabled -Dkeycloak.profile.feature.token_exchange=enabled
    logging:
      options:
        max-size: 100m
    volumes:
      - '../configs/keycloak:/etc/x509/https'
    ports:
      - 8080:8080
      - 8443:8443
    depends_on:
      - postgres

  prod_webrtc:
    image: phuongvmodev/janus-webrtc-gateway-docker
    restart: unless-stopped
    logging:
      options:
        max-size: 100m
    volumes:
      - ../configs/janus/janus.jcfg:/usr/local/etc/janus/janus.jcfg
      - ../configs/janus/janus.transport.http.jcfg:/usr/local/etc/janus/janus.transport.http.jcfg
    ports:
      - 7088:7088
      - 8288:80
      - 8088:8088
      - 8188:8188

  grpc:
    build:
      context: ../
      dockerfile: .docker/Dockerfile
    volumes:
      - ../:/ck-backend
      - /ck-backend/.venv
    restart: unless-stopped
    logging:
      options:
        max-size: 100m
    ports:
      - 25000:25000
  
  http:
    image: docker_grpc:latest
    restart: unless-stopped
    volumes:
      - ../:/ck-backend
    entrypoint: python app_http.py
    logging:
      options:
        max-size: 100m
    ports:
      - 25001:25001
  
  find_user_by_email:
    restart: unless-stopped
    build: ../find-user-by-email
    volumes:
      - ../find-user-by-email:/src
      - /src/node_modules
      - /src/orbitdb_directory
    ports:
      - 12016:12016
    logging:
      options:
        max-size: 100m
    environment:
      PUBLIC_IP_ADDRESS:
      TYPE: slave
      ORBITDB:

  coturn:
    image: instrumentisto/coturn:4.5.2
    restart: unless-stopped
    volumes:
      - ../configs/coturn/turnserver.conf:/etc/coturn/turnserver.conf
    network_mode: "host"
  
  smtp:
    build:
      context: .
      dockerfile: Dockerfile-haraka
    restart: unless-stopped
    logging:
      options:
        max-size: 100m
    volumes:
      - ../configs/haraka/auth_flat_file.ini/:/etc/haraka/config/auth_flat_file.ini
      - ../configs/haraka/tls.ini/:/etc/haraka/config/tls.ini
      - ../configs/haraka/tls_cert.pem:/etc/haraka/config/tls_cert.pem
      - ../configs/haraka/tls_key.pem:/etc/haraka/config/tls_key.pem
